#include "supnormSylvain.sollya";
//#include "supnorm.sollya";
#include "sos.sollya";


verbosity = 1!;

midpointmode = on!;

f = (2^x-1)/x;
I = [-1/16; 1/16];
deg = 9;
p = 471731526451026588275889254154076601135b-129 + x * (17725587574382949699b-66 + x * (16381921401269255253b-68 + x * (5677541315722219251b-69 + x * (6296594808808851415b-72 + x * (11638578502092174591b-76 + x * (9219711846930283661b-79 + x * (6390650459381428685b-82 + x * (3937639283455054765b-85 + x * 15534594642922816829b-91))))))));
mode = absolute;
quality=2^(-30);


/* read "example.sollya"; */
/*
f = sin(x);
I = [-1/32;1/32];
deg = 7;
p = fpminimax(f, [|1,...,deg|], [|D,D...|], I);
mode = relative;
quality = 2^-24;
*/

/*
f = exp(x);
I = [-1/32;1/32];
deg = 7;
p = fpminimax(f, [|0,...,deg|], [|D,D...|], I);
mode = relative;
quality = 2^-24;
*/

doSos = false;
printSosInstances = false;



"Starting supnorm";
timeSupnorm = time(res = supnorm(p,f,I,quality,mode));
norm = res[0];
sosInstances = res[1];

"Certified supnorm", norm;

if (mode == absolute) then errFunc = p - f else errFunc = p/f-1;

/*timeDirtySupnorm = time(dirtyNorm = dirtyinfnorm(errFunc,I));*/

"Dirty supnorm     ", dirtyNorm;

"Time for supnorm:       ", ceil(timeSupnorm * 1000), "ms";
"Time for dirty supnorm: ", ceil(timeDirtySupnorm * 1000), "ms";

if (doSos) then {

        "Producing SOS rewrites";
        autosimplify = off!;
        timeSOS = time(sosResult = sos(sosInstances));

        sosResultOkay = sosResult[0];
        sosInstancesResult = sosResult[1];
        autosimplify = on!;

        "SOS instances checking result", sosResultOkay;
        "Time for SOS:           ", ceil(timeSOS * 1000), "ms";

        if (printSosInstances) then {
                display = dyadic!;
                write("SOS instances: ", sosInstancesResult, "\n");
                display = default!;
        };

};