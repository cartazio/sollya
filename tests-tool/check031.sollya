/* Non-regression test for a bug regarding flushing input buffers when the main sollya process forks. The bug is very sensitive, not observable on all computers, so this test does not offer any guarantee at all that there will be no regression. The only thing we can say is that we have one example of one computer on one specific system on which this test failed prior to commit f175f2b when it has been fixed. */

print("=============== Check #1 ================");
restart;
bashexecute("while ! ( set -o noclobber; echo \"locked by $$\" > \"tempFile_check031.lock\" ) 2> /dev/null; do sleep 3; done");

print("prec = 350!;") > "tempFile_check031.sollya";
print("verbosity=0!;") >> "tempFile_check031.sollya";
print("print(\"Hello word\");") >> "tempFile_check031.sollya";
print("f = asin(x);") >> "tempFile_check031.sollya";
print("zero = 1b-100;") >> "tempFile_check031.sollya";
print("dom = [zero;0x3fefffffffffffff];") >> "tempFile_check031.sollya";
print("q = x * (2918320636831873b-51 + x^2 * (-2812036178508593b-51 + x^2 * 3308766278594951b-51));") >> "tempFile_check031.sollya";
print("qAbsMax = dirtyinfnorm(q,dom);") >> "tempFile_check031.sollya";
print("qDom = [zero;qAbsMax];") >> "tempFile_check031.sollya";
print("s = x * (9007199254740991b-53 + x^2 * (-6004799503160491b-55 + x^2 * (1200959900626429b-57 + x^2 * (-3660068266180895b-64 + x^2 * (813348440531377b-68 + x^2 * (-1892869089601051b-76 + x^2 * (3104375640212121b-84 + x^2 * (-7317263027378565b-93))))))));") >> "tempFile_check031.sollya";
print("c = 1 + x^2 * (-2251799813685247b-52 + x^2 * (3002399751580135b-56 + x^2 * (-6405119469984935b-62 + x^2 * (7320136530115583b-68 + x^2 * (-2602714949476447b-73 + x^2 * (2523821868050301b-80 + x^2 * (-1773817463568309b-87 + x^2 * 3652978240026101b-96)))))));") >> "tempFile_check031.sollya";
print("t = s(q);") >> "tempFile_check031.sollya";
print("h = c(q);") >> "tempFile_check031.sollya";
print("r = x * h - t * sqrt(1 - x^2);") >> "tempFile_check031.sollya";
print("p = x * (1 + x^2 * (6004799503156347b-55 + x^2 * (5404319581047423b-56 + x^2 * (3216828076239507b-56 + x^2 * 8803447692148775b-58))));") >> "tempFile_check031.sollya";
print("F = q + p(r);") >> "tempFile_check031.sollya";
print("eps = 1;") >> "tempFile_check031.sollya";
print("plot(F/f-1,0,eps,-eps,[-sup(dom),sup(dom)],postscript,\"tempFile_check031.sollya.plot\");") >> "tempFile_check031.sollya";
print("") >> "tempFile_check031.sollya";
print("\"Relative error sine:         2^(\", ~log2(dirtyinfnorm(s/sin(x)-1,qDom)), \")\";") >> "tempFile_check031.sollya";
print("\"Relative error cosine:       2^(\", ~log2(dirtyinfnorm(c/cos(x)-1,qDom)), \")\";") >> "tempFile_check031.sollya";
print("\"Relative error reduced asin: 2^(\", ~log2(dirtyinfnorm(p/f-1,[0,1])), \")\";") >> "tempFile_check031.sollya";
print("\"Relative error overall asin: 2^(\", ~log2(eps), \")\";") >> "tempFile_check031.sollya";
print("/********************************************************************************/") >> "tempFile_check031.sollya";
print("") >> "tempFile_check031.sollya";
print("qq = x * 6215193255146273b-52;") >> "tempFile_check031.sollya";
print("monomials1 = [|qq(x) * sqrt(1-x^2) / f,") >> "tempFile_check031.sollya";
print("               qq(x)^3 * sqrt(1-x^2) / f,") >> "tempFile_check031.sollya";
print("               qq(x)^5 * sqrt(1-x^2) / f,") >> "tempFile_check031.sollya";
print("	       qq(x)^7 * sqrt(1-x^2) / f,") >> "tempFile_check031.sollya";
print("	       qq(x)^9 * sqrt(1-x^2) / f|];") >> "tempFile_check031.sollya";
print("r_exact = x*cos(qq(x))-sin(qq(x))*sqrt(1-x^2);") >> "tempFile_check031.sollya";
print("rrstar = 1185449905000378335660124823795582314713689621422331491145534138561909185435859993500621958580193501438747b-379 * (x^13 * 3322428516055149257214323726437230765360128943897448769648307161661046768703377826269394896035933441174316996816593010464577342602835658333577758083903702882590560340570439940174754378280321b-624) / asin(x) + -1231025281652079439506123875116715517798455642173950315237259097831850626999749326033920476429918925282789b-371 * (x^11 * 86009489774387016008983852882601992712376280985106122928124411941985782507387089925494195848209808599620905173313532045930440819646621087742055199260496163649b-520) / asin(x) + 926714126841153776414133061576359743971449327983650636394266431175944791274234563783808322146123596021301b-364 * (x^9 * 2226573813553071122888224017176137039898190767752187705723358029551392386421767103114971542147284427945827772826758090820225281b-416) / asin(x) + -1630338651524426511415864534309959734262503065063483073603855875716978428937021172735822989345028810938579b-359 * (x^7 * 57640511066914988424865872984169909598464624435858660244460993055001291786871802866265946205889b-312) / asin(x) + 1528962741861249365729594088473203777745661940585949125817894508544671529747005621792363771421284778644271b-354 * (x^5 * 1492170839265086001261130874140987270862577211466609670186099841b-208) / asin(x) + -1146747008967837528384407644181325237991762440185555409191013341345644204038939043293813478423205320819583b-350 * (x^3 * 38628627198815724950998625790529b-104) / asin(x) + 2293497670391764609099560152290162891351426335764756059851764706923946757679772583315851739423910735461283b-350 * x / asin(x) + 762155727157278179136532179256768353443266015188124475127855103512713955335580519841747725764757618086165b-374 * (x^11 * 534565600724342519756382373832542307068217057880633746430614122821737028853799315343713010382114418742510038723465219034509316254398734238087354860648810384426071542840430177b-572 * sqrt(1 - x^2)) / asin(x) + -812617166738993525903101850799508476414292447507693939791975571199699440105393279408120374040561136222077b-367 * (x^9 * 13838586548080362858940014402840360268995306239673696598277155473497177385003491303000131757744686625519952014193459235397229970270226467527713b-468 * sqrt(1 - x^2)) / asin(x) + 930836057812233322053811960147263840204357926193380959694725834487580574077723620849036862236698223634831b-361 * (x^7 * 358246915606274140191920304152769949749350577336553141294816968955983915567186730677646875115691472828069001697b-364 * sqrt(1 - x^2)) / asin(x) + -76444837643904050692115622432968537415456943296104775474714328119930795803778581701075888974345956040681b-352 * (x^5 * 9274130135726315977204924027295787401259172547694862836311277722826903837042593b-260 * sqrt(1 - x^2)) / asin(x) + 1528993133257042849364699870782846830706185957201989136287159875241810745140127385923043995961818809942115b-352 * (x^3 * 240084383221639362889634237063322305672153048417b-156 * sqrt(1 - x^2)) / asin(x) + -2293497930798797652047729873962557369870419550804353982360842712293193648384991483214723064408115663948359b-350 * (x * 6215193255146273b-52 * sqrt(1 - x^2)) / asin(x);") >> "tempFile_check031.sollya";
print("print(\"Hello\");") >> "tempFile_check031.sollya";
print("rr = fpminimax(r_exact/f, monomials1, [|D...|], dom, absolute, default, default);") >> "tempFile_check031.sollya";

read "tempFile_check031.sollya";
bashexecute("sleep 1; rm -rf tempFile_check031.sollya tempFile_check031.sollya.plot.eps tempFile_check031.lock");