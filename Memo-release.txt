Before even thinking of performing the release:
  * Close bugs that can be closed.
  * Compile with flags -Wall and -Wextra (and also  -std=c99 -ansi -pedantic) and check that there is no warning. Otherwise, do the appropriate corrections.
  * Check that all modifications have been reported in the documenation.
  * Check that all new feature has a library version if needed and has a shlp if needed (with a #LIBRARYNAME if needed) and an entry in the 'help help' list.

When the release seems ready:
  * Check that 'make check' passes on several architectures (especially cygwin):
    - powerpc (e.g. gcc110.fsffrance.org)
    - arm hard float (e.g. maus)
    - arm soft float hase (e.g. hase)
    - Intel32 (e.g. cosmos)
    - Intel64 with gcc
    - Intel64 with icc
    - Cygwin
    
  * Check that all modifications to sollya.tex have been reported into sollya.php.
  * valgrind everything.^{1}
  * Recompile the doc.
  * Check that the version number of Sollya is correctly set in configure.ac, sollya.tex and sollya.php.
  * Check that copyrights and email addresses are up to date.
  * Generate the Changelog file, and the human-readable NEWS file.
  * Build the release. Try to install it and test it on several architectures (especially cygwin).
  * Put it online and make announcements.
  * Create an entry in history.php for the new release.










---------------------------
^{1} : begin by compiling sollya with option --enable-legacy-memory-management. To valgrind all test-lib files for instance, do:
        cd tests-lib
        export LD_LIBRARY_PATH=../.libs/
        for i in *.c
        do
          file=`basename $i ".c"`
          valgrind --leak-check=full --num-callers=50 --child-silent-after-fork=yes .libs/$file & > $file.valgrind.log;done
        done

        grep -L "no leaks are possible" *.valgrind.log

Once all problems corrected, recompile sollya without option --enable-legacy-memory-management and re-run valgrind. Normally, no new leak should appear.

