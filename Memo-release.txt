Before even thinking of performing the release:
  * Close bugs that can be closed.
  * Compile with flags -Wall and -Wextra and -std=c99 and check that there is no warning. Otherwise, do the appropriate corrections.
  * Check that all new feature has a library version if needed and has a shlp if needed (with a #LIBRARYNAME if needed) and an entry in the 'help help' list.
  * Check that all modifications have been reported in the documentation.
    - check that help help is up-to-date
    - check that for each new command and function, one gets something relevant when doing 'help the_command'
    - check that the list of reserved keywords is up-to-date.
    - check that all shlp contain a #LIBRARYNAME entry if needed.
    - (just to be sure) compile Sollya with option -DWARN_IF_NO_HELP_TEXT=1 and check that nothing has been forgotten.


When the release seems ready:
  * Check that 'make check' passes on several architectures:
    - powerpc (e.g. gcc110.fsffrance.org)
    - arm hard float (e.g. maus)
    - arm soft float hase (e.g. hase)
    - Intel32 (e.g. cosmos)
    - Intel64 with gcc
    - Intel64 with icc
    - Cygwin

  * make distcheck (this automatically includes trying to compile with a VPATH build with sources on a read-only directory). It is useful to additionally test if VPATH_BUILDs work correctly both with configure given either with a relative and absolute path.
  * Check that all modifications to sollya.tex have been reported into sollya.php.
  * valgrind everything.^{1}
  * Check that copyrights and email addresses are up to date.
  * Recompile the doc.
  * Generate the Changelog file, and the human-readable NEWS file.
  * Tag the new release.
  * Put correct version number of Sollya in configure.ac, sollya.tex and sollya.php in the tag repository.
  * Build the release (make dist). Try to install it and test it on several architectures (the same as before).
  * Publish it on the server of gforge.
  * Create an entry for the previous release in history.php. Update current-release.php with the new release. Create a new directory "sollya-n" on the web server and put it the HTML documentation of the new release.
  * Make announcements.









---------------------------
^{1} : begin by compiling sollya with option --enable-legacy-memory-management. To valgrind all test-lib files for instance, do:
        cd tests-lib
        export LD_LIBRARY_PATH=../.libs/
        for i in *.c
        do
          file=`basename $i ".c"`
          valgrind --leak-check=full --num-callers=50 --child-silent-after-fork=yes .libs/$file & > $file.valgrind.log;done
        done

        grep -L "no leaks are possible" *.valgrind.log

Once all problems corrected, recompile sollya without option --enable-legacy-memory-management and re-run valgrind. Normally, no new leak should appear.





------------------------------------------------
Current status for 4.0:

4.0 does compile
*  gcc15 : Intel Xeon 2.8 / Debian x86-64 -- gmp-4.3.2, mpfr-3.0.0.p3, mpfi-1.5.1, fplll-4.0.3
*  gcc60 : Intel Itanium 2 (Madison) / Debian ia64 -- gmp-4.3.2, mpfr-3.0.0.p3, mpfi-1.5.1, fplll-4.0.3
*  gcc110 : IBM POWER7 / Fedora 18 ppc64 -- gmp-5.1.2, mpfr-3.1.2, mpfri-1.5.1, fplll-4.0.3
*  yber : Debian i686 -- gmp-5.1.2, mpfr-3.1.2, mpfri-1.5.1, fplll-4.0.3
*  yber : Debian i686 -- packaged versions of all dependencies (gmp-5.0.5, mpfr-3.1.1-p2, mpfri-1.5.1, fplll-4.0.3)
*  yber : Debian i686 -- packaged versions of all dependencies but fplll (gmp-5.0.5, mpfr-3.1.1-p2, mpfri-1.5.1), fplll-3.0.12
*  pipol12 : Intel Xeon Dual Core / Snow Leopard -- gmp-5.1.2, mpfr-3.1.2, mpfi-1.5.1, fplll-4.0.3
*  pipol12 : Intel Xeon Dual Core / Snow Leopard -- compiled and installed as root, gmp-5.1.2, mpfr-3.1.2, mpfi-1.5.1, fplll-4.0.3
          --> tried to compile a .c file against libsollya: ok.
*  pipol19 : Intel Xeon Quad Core / Fedora 17 -- packaged versions of all dependencies (gmp-5.0.2, mpfr-3.1.0, mpfri-1.5.1, fplll-3.0.12)
          --> also tried to compile and install it as root, and then compile a .c file against libsollya: ok but does not find the library at run time
*  caolila : Intel Core 2 / Debian --  gmp-5.1.2, mpfr-3.1.2, mpfri-1.5.1, fplll-4.0.3

4.0 does not compile:
  gcc61 : HP PA-8600 / Debian hppa -- mpfr does not compile
  gcc62 : TI UltraSparc II (BlackBird) / Debian sparc -- mpfr check segfault
  gcc64 : Sun UltraSPARC-IIIi / OpenBSD 5.1 sparc64 -- too long
