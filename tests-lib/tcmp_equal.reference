First run with autosimplify = on

17 == 42 returns false

42 == 17 returns false

17 == 17 returns true

The following test is not certified (both values are probably equal)
sin((pi) / 3) == sqrt(3) / 2 returns true

sin((pi) / 3) == sqrt(3) / 2 * (1 + 6.2230152778611417071440640537801242405902521687212e-61) returns false

sin((pi) / 3) - sqrt(3) / 2 == 1 returns false

The test will rely on pure FP evaluation.
sin((pi) / 3) - sqrt(3) / 2 == 0 returns true

1 == sin((pi) / 3) - sqrt(3) / 2 returns false

The test will rely on pure FP evaluation.
0 == sin((pi) / 3) - sqrt(3) / 2 returns true

Warning: the following test involves a NaN
1 == log(-17) returns false

Warning: the following test involves a NaN
log(-17) == 1 returns false

The test will rely on pure FP evaluation.
1 == tan((pi) / 2)^2 returns false

The test will rely on pure FP evaluation.
1 == -(tan((pi) / 2)^2) returns false

The test will rely on pure FP evaluation.
tan((pi) / 2)^2 == 1 returns false

The test will rely on pure FP evaluation.
-(tan((pi) / 2)^2) == 1 returns false

The test will rely on pure FP evaluation.
infty == -(tan((pi) / 2)^2) returns false

The test will rely on pure FP evaluation.
-(tan((pi) / 2)^2) == infty returns false

The test will rely on pure FP evaluation.
infty == tan((pi) / 2)^2 returns false

The test will rely on pure FP evaluation.
tan((pi) / 2)^2 == infty returns false

error == 17 returns false

error == error returns false

NaN == error returns false

NaN == NaN returns false

NaN == 1 returns false

2 + _x_ == _x_ + 2 returns true

[1;2] == [1;2] returns true (even when bounds are stored at different precisions)

1 + exp(sin(x + log(x^2))) == 1 + exp(sin(x + log(x^2))) returns true (even when constructed at different precisions)

Hello! == Hella! returns false

Hello! == Hello! returns true

Second run with autosimplify = off

17 == 42 returns false

42 == 17 returns false

17 == 17 returns true

The following test is not certified (both values are probably equal)
sin((pi) / 3) == sqrt(3) / 2 returns true

sin((pi) / 3) == sqrt(3) / 2 * (1 + 6.22301527786e-61) returns false

sin((pi) / 3) - sqrt(3) / 2 == 1 returns false

The test will rely on pure FP evaluation.
sin((pi) / 3) - sqrt(3) / 2 == 0 returns true

1 == sin((pi) / 3) - sqrt(3) / 2 returns false

The test will rely on pure FP evaluation.
0 == sin((pi) / 3) - sqrt(3) / 2 returns true

Warning: the following test involves a NaN
1 == log(-17) returns false

Warning: the following test involves a NaN
log(-17) == 1 returns false

The test will rely on pure FP evaluation.
1 == tan((pi) / 2)^2 returns false

The test will rely on pure FP evaluation.
1 == -(tan((pi) / 2)^2) returns false

The test will rely on pure FP evaluation.
tan((pi) / 2)^2 == 1 returns false

The test will rely on pure FP evaluation.
-(tan((pi) / 2)^2) == 1 returns false

The test will rely on pure FP evaluation.
infty == -(tan((pi) / 2)^2) returns false

The test will rely on pure FP evaluation.
-(tan((pi) / 2)^2) == infty returns false

The test will rely on pure FP evaluation.
infty == tan((pi) / 2)^2 returns false

The test will rely on pure FP evaluation.
tan((pi) / 2)^2 == infty returns false

error == 17 returns false

error == error returns false

NaN == error returns false

NaN == NaN returns false

NaN == 1 returns false

2 + x == x + 2 returns false

[1;2] == [1;2] returns true (even when bounds are stored at different precisions)

1 + exp(sin(x + log(x^2))) == 1 + exp(sin(x + log(x^2))) returns true (even when constructed at different precisions)

Hello! == Hella! returns false

Hello! == Hello! returns true

