TMPBUFFER=tmpbuffer
exitnumber=2

failure_check() {
 boolvalue="$?"
 exitnumber=`expr $exitnumber + 1`;
 if test "$boolvalue" -ne 0
 then
   if test -e $TMPBUFFER
   then
     printf "\n"
     cat $TMPBUFFER
     printf "\n"
     rm -rf $TMPBUFFER
   fi
   printf "Failed (exit code $exitnumber).\n"
   exit $exitnumber
 fi
 rm -rf $TMPBUFFER 1> /dev/null 2>&1
}

if test -z "$LOG_DIR"
then
  LOG_DIR=$HOME/log
fi
if test ! -d "$LOG_DIR"
then
  printf "Creating $LOG_DIR... "
  mkdir "$LOG_DIR"; failure_check
  printf "done.\n"
fi

if test -n "$PREFIX_PATH" -a ! -d "$PREFIX_PATH"
then
  printf "Creating $PREFIX_PATH... "
  mkdir "$PREFIX_PATH"; failure_check
  printf "done.\n"
fi

if test -n "$PREFIX_PATH"
then
  PREFIX="--prefix=$PREFIX_PATH"

  if test -n "$GMP_PKG_NAME"
  then
    WITHGMP="--with-gmp=$PREFIX_PATH"
  else
    WITHGMP=""
  fi

  if test -n "$MPFR_PKG_NAME"
  then
    WITHMPFR="--with-mpfr=$PREFIX_PATH"
  else
    WITHMPFR=""
  fi

  if test -n "$MPFI_PKG_NAME"
  then
    WITHMPFI="--with-mpfi=$PREFIX_PATH"
  else
    WITHMPFI=""
  fi

  if test -n "$FPLLL_PKG_NAME"
  then
    WITHFPLLL="--with-fplll=$PREFIX_PATH"
  else
    WITHFPLLL=""
  fi
else
  PREFIX=""
  WITHGMP=""
  WITHMPFR=""
  WITHMPFI=""
  WITHFPLLL=""
fi


######################### INSTALLATION OF GMP #########################
if test -n "$GMP_PKG_NAME"
then
  printf "\nDownloading GMP... "
  if test -e "$GMP_PKG_NAME.tar.bz2"
  then
    rm -rf "$GMP_PKG_NAME.tar.bz2"
  fi
  $GET_PRG ftp://ftp.gmplib.org/pub/$GMP_PKG_NAME/$GMP_PKG_NAME.tar.bz2 1> $TMPBUFFER 2>&1 ; failure_check
  printf "done.\n"

  tar -jxvf $GMP_PKG_NAME.tar.bz2 1> $TMPBUFFER 2>&1 ; failure_check
  cd $GMP_PKG_NAME

  printf "Running configure... "
  ./configure "$PREFIX" > "$LOG_DIR/gmp_configure.log" ; failure_check
  printf "done.\n"

  printf "Compiling... "
  make > "$LOG_DIR/gmp_compile.log" ; failure_check
  printf "done.\n"

  printf "Running make check... "
  make check > "$LOG_DIR/gmp_check.log" ; failure_check
  printf "done.\n"

  printf "Installing it... "
  make install > "$LOG_DIR/gmp_install.log" ; failure_check
  printf "done.\n"

  cd ..
  rm -rf $GMP_PKG_NAME.tar.bz2
  rm -rf $GMP_PKG_NAME
  printf "\n"
fi

######################### INSTALLATION OF MPFR ########################
if test -n "$MPFR_PKG_NAME"
then
  printf "Downloading MPFR... "
  if test -e "$MPFR_PKG_NAME.tar.bz2"
  then
    rm -rf "$MPFR_PKG_NAME.tar.bz2"
  fi
  $GET_PRG http://www.mpfr.org/$MPFR_PKG_NAME/$MPFR_PKG_NAME.tar.bz2 1> $TMPBUFFER 2>&1 ; failure_check
  printf "done.\n"

  tar -jxvf $MPFR_PKG_NAME.tar.bz2 1> $TMPBUFFER 2>&1 ; failure_check
  cd $MPFR_PKG_NAME

  printf "Running configure... "
  ./configure $PREFIX $WITHGMP > "$LOG_DIR/mpfr_configure.log" ; failure_check
  printf "done.\n"

  printf "Compiling... "
  make > "$LOG_DIR/mpfr_compile.log" ; failure_check
  printf "done.\n"

  printf "Running make check... "
  make check > "$LOG_DIR/mpfr_check.log" ; failure_check
  printf "done.\n"

  printf "Installing it... "
  make install > "$LOG_DIR/mpfr_install.log" ; failure_check
  printf "done.\n"

  cd ..
  rm -rf $MPFR_PKG_NAME.tar.bz2
  rm -rf $MPFR_PKG_NAME
  printf "\n"
fi

######################### INSTALLATION OF MPFI ########################
if test -n "$MPFI_PKG_NAME"
then
  printf "Downloading MPFI... "
  case "$MPFI_PKG_NAME" in
    mpfi-1.5.1 )
      MPFI_URL=https://gforge.inria.fr/frs/download.php/30130/mpfi-1.5.1.tar.gz
      ;;
    mpfi-1.5.1-rc1 )
      MPFI_URL=https://gforge.inria.fr/frs/download.php/30116/mpfi-1.5.1-rc1.tar.gz
      ;;
    mpfi-1.5.1-RC1 )
      MPFI_URL=https://gforge.inria.fr/frs/download.php/30116/mpfi-1.5.1-rc1.tar.gz
      MPFI_PKG_NAME=mpfi-1.5-rc1
      ;;
    mpfi-1.5 )
      MPFI_URL=https://gforge.inria.fr/frs/download.php/27346/mpfi-1.5.tar.gz
      ;;
    mpfi-1.5.0 )
      MPFI_URL=https://gforge.inria.fr/frs/download.php/27346/mpfi-1.5.tar.gz
      MPFI_PKG_NAME=mpfi-1.5
      ;;
    mpfi-1.4 )
      MPFI_URL=https://gforge.inria.fr/frs/download.php/22256/mpfi-1.4.tar.gz
      ;;
    mpfi-1.3.4-rc3 )
      MPFI_URL=https://gforge.inria.fr/frs/download.php/468/mpfi-1.3.4-RC3.tar.gz
      MPFI_PKG_NAME=mpfi-1.3.4-RC3
      ;;
    mpfi-1.3.4-RC3 )
      MPFI_URL=https://gforge.inria.fr/frs/download.php/468/mpfi-1.3.4-RC3.tar.gz
      ;;
    mpfi-1.3.4-rc2 )
      MPFI_URL=https://gforge.inria.fr/frs/download.php/351/mpfi-1.3.4-RC2.tar.gz
      MPFI_PKG_NAME=mpfi-1.3.4-RC2
      ;;
    mpfi-1.3.4-RC2 )
      MPFI_URL=https://gforge.inria.fr/frs/download.php/351/mpfi-1.3.4-RC2.tar.gz
      ;;
    mpfi-1.3.4-rc1 )
      MPFI_URL=https://gforge.inria.fr/frs/download.php/237/mpfi-1.3.4-RC1.tar.gz
      MPFI_PKG_NAME=mpfi-1.3.4-RC1
      ;;
    mpfi-1.3.4-RC1 )
      MPFI_URL=https://gforge.inria.fr/frs/download.php/237/mpfi-1.3.4-RC1.tar.gz
      ;;
    mpfi-1.3.3 )
      MPFI_URL=https://gforge.inria.fr/frs/download.php/222/mpfi-1.3.3.tar.gz
      ;;
    * )
      echo "Unknown package $MPFI_PKG_NAME" > $TMPBUFFER; false; failure_check
      ;;
  esac

  if test -e "$MPFI_PKG_NAME.tar.gz"
  then
    rm -rf "$MPFI_PKG_NAME.tar.gz"
  fi

  $GET_PRG $MPFI_URL 1> $TMPBUFFER 2>&1 ; failure_check
  printf "done.\n"

  tar -zxvf $MPFI_PKG_NAME.tar.gz 1> $TMPBUFFER 2>&1 ; failure_check
  cd $MPFI_PKG_NAME

  printf "Running configure... "
  ./configure $PREFIX $WITHGMP $WITHMPFR > "$LOG_DIR/mpfi_configure.log" ; failure_check
  printf "done.\n"

  printf "Compiling... "
  make > "$LOG_DIR/mpfi_compile.log" ; failure_check
  printf "done.\n"

  printf "Running make check... "
  make check > "$LOG_DIR/mpfi_check.log" ; failure_check
  printf "done.\n"

  printf "Installing it... "
  make install > "$LOG_DIR/mpfi_install.log" ; failure_check
  printf "done.\n"

  cd ..
  rm -rf $MPFI_PKG_NAME.tar.gz
  rm -rf $MPFI_PKG_NAME
  printf "\n"
fi

######################## INSTALLATION OF FPLLL ########################
if test -n "$FPLLL_PKG_NAME"
then
  printf "Downloading FPLLL... "
  if test -e "$FPLLL_PKG_NAME.tar.gz"
  then
    rm -rf "$FPLLL_PKG_NAME.tar.gz"
  fi
  $GET_PRG http://perso.ens-lyon.fr/damien.stehle/fplll/$FPLLL_PKG_NAME.tar.gz 1> $TMPBUFFER 2>&1 ; failure_check
  printf "done.\n"

  tar -zxvf $FPLLL_PKG_NAME.tar.gz 1> $TMPBUFFER 2>&1 ; failure_check
  cd $FPLLL_PKG_NAME

  apply_fplll_patch="false"
  case "$FPLLL_PKG_NAME" in
    libfplll-4.0.3 )
      apply_fplll_patch="true"
      ;;
    libfplll-4.0.2 )
      apply_fplll_patch="true"
      ;;
    libfplll-4.0.1 )
      apply_fplll_patch="true"
      ;;
    libfplll-3.1.3 )
      apply_fplll_patch="true"
      ;;
  esac

  if test "$apply_fplll_patch" = "true"
  then
    printf "Downloading FPLLL configure patch... "
    if test -e fplll.patch
    then
      rm -rf fplll.patch
    fi
    $GET_PRG http://www-sop.inria.fr/members/Sylvain.Chevillard/fplll.patch 1> $TMPBUFFER 2>&1 ; failure_check
    printf "done.\n"
    printf "Patching bug in FPLLL configure file... "
    which patch 1> $TMPBUFFER 2>&1; failure_check
    patch -p0 < fplll.patch 1> $TMPBUFFER 2>&1 ; failure_check
    autoreconf -i 1> $TMPBUFFER 2>&1 ; failure_check
    if which libtoolize 1> /dev/null 2>&1
    then
      libtoolize 1> $TMPBUFFER 2>&1 ; failure_check
    fi
    if which glibtoolize 1> /dev/null 2>&1
    then
      glibtoolize 1> $TMPBUFFER 2>&1 ; failure_check
    fi
    rm -rf fplll.patch
    printf "done.\n"
  fi

  printf "Running configure... "
  ./configure $PREFIX $WITHGMP $WITHMPFR > "$LOG_DIR/fplll_configure.log" ; failure_check
  printf "done.\n"

  printf "Compiling... "
  make > "$LOG_DIR/fplll_compile.log" ; failure_check
  printf "done.\n"

  printf "Running make check... "
  make check > "$LOG_DIR/fplll_check.log" ; failure_check
  printf "done.\n"

  printf "Installing it... "
  make install > "$LOG_DIR/fplll_install.log" ; failure_check
  printf "done.\n"

  cd ..
  rm -rf $FPLLL_PKG_NAME.tar.gz
  rm -rf $FPLLL_PKG_NAME
fi

######################## INSTALLATION OF SOLLYA ########################
if test -n "$SOLLYA_PKG_NAME"
then
  printf "Downloading Sollya... "
  case "$SOLLYA_PKG_NAME" in
    sollya-svn )
      svn co svn://scm.gforge.inria.fr/svn/sollya/trunk $SOLLYA_PKG_NAME 1> $TMPBUFFER 2>&1 ; failure_check
      ;;
    sollya-4.0 )
      SOLLYA_URL=http://www-sop.inria.fr/members/Sylvain.Chevillard/sollya-4.0.tar.bz2
      ;;
    sollya-3.0 )
      SOLLYA_URL=https://gforge.inria.fr/frs/download.php/28570/sollya-3.0.tar.bz2
      ;;
    sollya-2.9 )
      SOLLYA_URL=https://gforge.inria.fr/frs/download.php/28249/sollya-2.9.tar.bz2
      ;;
    sollya-2.0 )
      SOLLYA_URL=https://gforge.inria.fr/frs/download.php/26857/sollya-2.0.tar.bz2
      ;;
    sollya-weekly-* )
      SOLLYA_URL=http://sollya.gforge.inria.fr/$SOLLYA_PKG_NAME.tar.bz2
      ;;
    * )
      echo "Unknown package $SOLLYA_PKG_NAME" > $TMPBUFFER; false; failure_check
      ;;
    esac
  if test "$SOLLYA_PKG_NAME" != "sollya-svn"
  then
    $GET_PRG $SOLLYA_URL 1> $TMPBUFFER 2>&1 ; failure_check
  fi
  printf "done.\n"

  if test "$SOLLYA_PKG_NAME" != "sollya-svn"
  then
    tar -jxvf $SOLLYA_PKG_NAME.tar.bz2 1> $TMPBUFFER 2>&1 ; failure_check
    cd "$SOLLYA_PKG_NAME"
  else
    cd "$SOLLYA_PKG_NAME"
    printf "Generating configure file... "
    ./autogen.sh 1> $TMPBUFFER 2>&1 ; failure_check
    printf "done.\n"
  fi

  printf "Running configure... "
  ./configure $PREFIX $WITHGMP $WITHMPFR $WITHMPFI $WITHFPLLL CFLAGS="$SOLLYA_CFLAGS" CXX_FLAGS="$SOLLYA_CXXFLAGS" > "$LOG_DIR/sollya_configure.log" ; failure_check
  printf "done.\n"

  printf "Compiling... "
  make > "$LOG_DIR/sollya_compile.log" ; failure_check
  printf "done.\n"

  printf "Running make check... "
  make check > "$LOG_DIR/sollya_check.log" ; failure_check
  printf "done.\n"

  printf "Installing it... "
  make install > "$LOG_DIR/sollya_install.log" ; failure_check
  printf "done.\n"

  cd ..
fi

